{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/chessmasterclass/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/chessmasterclass/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/chessmasterclass/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import jwt_decode from'jwt-decode';// create user context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var UserContext=/*#__PURE__*/createContext();// create provider\nexport var UserContextProvider=function UserContextProvider(_ref){var children=_ref.children;// lists with user/auth data\n// check if there are tokens in local storage: if they are overwrite lists \nvar _useState=useState(localStorage.getItem('authTokens')?JSON.parse(localStorage.getItem('authTokens')):[]),_useState2=_slicedToArray(_useState,2),authTokens=_useState2[0],setAuthTokens=_useState2[1];var _useState3=useState(localStorage.getItem('authTokens')?jwt_decode(JSON.parse(localStorage.getItem('authTokens')).access):[]),_useState4=_slicedToArray(_useState3,2),userInfo=_useState4[0],setUserInfo=_useState4[1];// func to navigate (ie to homepage)\nvar navigate=useNavigate();// func to login user: from form(onSubmit) in Login.js get username and pass and send it to API. In reverse get tokens (custom one have all needed data)\nvar login=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// call to API\n_context.next=3;return fetch('http://127.0.0.1:8000/api/token/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':e.target.username.value,'password':e.target.password.value})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;// if status-200 then set Lists with data and save tokens in localstorage\nif(response.status===200){setAuthTokens(data);setUserInfo(jwt_decode(data.access));localStorage.setItem('authTokens',JSON.stringify(data));navigate('/');}else if(response.status===401){console.log('wrong pass or username');}else{console.log('smth went wrong');}case 8:case\"end\":return _context.stop();}}},_callee);}));return function login(_x){return _ref2.apply(this,arguments);};}();// update refresh token every 4 mins\nvar updateTokens=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://127.0.0.1:8000/api/token/refresh/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'refresh':authTokens===null||authTokens===void 0?void 0:authTokens.refresh})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;// if status-200 then set Lists with data and save tokens in localstorage\nif(response.status===200){setAuthTokens(data);setUserInfo(jwt_decode(data.access));localStorage.setItem('authTokens',JSON.stringify(data));}// else: smth is wrong and logout\nelse{logout();}case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function updateTokens(){return _ref3.apply(this,arguments);};}();// logout\nvar logout=function logout(){setAuthTokens([]);setUserInfo([]);localStorage.clear();navigate('/');};useEffect(function(){var fourMinutes=1000*4*60;var interval=setInterval(function(){updateTokens();},fourMinutes);return function(){return clearInterval(interval);};},[]);// collection of data to hook between components\nvar contextData={// data\nuserInfo:userInfo,// functions\nlogin:login,logout:logout};// provider DOM\nreturn/*#__PURE__*/_jsx(UserContext.Provider,{value:contextData,children:children});};","map":{"version":3,"names":["React","createContext","useEffect","useState","useNavigate","jwt_decode","UserContext","UserContextProvider","children","localStorage","getItem","JSON","parse","authTokens","setAuthTokens","access","userInfo","setUserInfo","navigate","login","e","preventDefault","fetch","method","headers","body","stringify","target","username","value","password","response","json","data","status","setItem","console","log","updateTokens","refresh","logout","clear","fourMinutes","interval","setInterval","clearInterval","contextData"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/chessmasterclass/src/context/UserContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\n// create user context\r\nexport const UserContext = createContext()\r\n\r\n// create provider\r\nexport const UserContextProvider = ({children}) => {   \r\n\r\n    // lists with user/auth data\r\n    // check if there are tokens in local storage: if they are overwrite lists \r\n    let [authTokens, setAuthTokens] = useState(localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : [])\r\n    let [userInfo, setUserInfo] = useState(localStorage.getItem('authTokens') ? jwt_decode(JSON.parse(localStorage.getItem('authTokens')).access) : [])\r\n\r\n    // func to navigate (ie to homepage)\r\n    const navigate = useNavigate()\r\n\r\n    // func to login user: from form(onSubmit) in Login.js get username and pass and send it to API. In reverse get tokens (custom one have all needed data)\r\n    let login = async (e) => {\r\n        e.preventDefault()\r\n\r\n        // call to API\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({'username': e.target.username.value, 'password': e.target.password.value}),\r\n        })\r\n        // get tokens in reponse\r\n        let data = await response.json()\r\n\r\n        // if status-200 then set Lists with data and save tokens in localstorage\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUserInfo(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))   \r\n            navigate('/')\r\n        }else if(response.status === 401){\r\n            console.log('wrong pass or username')\r\n        }\r\n        else{\r\n            console.log('smth went wrong')\r\n        }\r\n    }\r\n\r\n    // update refresh token every 4 mins\r\n    let updateTokens = async () => {        \r\n        // call to API\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({'refresh': authTokens?.refresh}),\r\n        })\r\n        // get tokens in reponse\r\n        let data = await response.json()\r\n\r\n        // if status-200 then set Lists with data and save tokens in localstorage\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUserInfo(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))              \r\n        }\r\n        // else: smth is wrong and logout\r\n        else{\r\n            logout()\r\n        }\r\n    }\r\n\r\n\r\n    // logout\r\n    let logout = () => {\r\n        setAuthTokens([])\r\n        setUserInfo([])\r\n        localStorage.clear() \r\n        navigate('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        let fourMinutes = 1000 * 4 * 60\r\n        let interval = setInterval(() => {\r\n            updateTokens()\r\n        }, fourMinutes)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    // collection of data to hook between components\r\n    let contextData = {\r\n        // data\r\n        userInfo: userInfo,\r\n\r\n        // functions\r\n        login: login,\r\n        logout: logout,\r\n    }\r\n\r\n    // provider DOM\r\n    return(\r\n        <UserContext.Provider value={contextData}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}