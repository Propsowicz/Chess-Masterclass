{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\components\\\\ChessBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chessboard } from \"react-chessboard\"; // https://www.npmjs.com/package/react-chessboard\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessBoard = props => {\n  _s();\n\n  const [game, setGame] = useState();\n\n  let chessCoordsParser = () => {\n    try {\n      let x = \"{a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'}\"; // example\n\n      let parsedCoord = {};\n      let rootProcessing = props.coord.substring(1, x.length - 1);\n      let firstLevelSplit = rootProcessing.split(',');\n\n      for (let i = 0; i < firstLevelSplit.length; i++) {\n        let scdLevelSplit = firstLevelSplit[i].split(':');\n        let key = scdLevelSplit[0].replace(/ /g, '').replace(/\"/g, '');\n        let value = scdLevelSplit[1].replace(/ /g, '').replace(/'/g, '');\n        parsedCoord[key] = value;\n      }\n\n      setGame(parsedCoord);\n    } catch (error) {\n      setGame('');\n    }\n  };\n\n  useEffect(() => {\n    chessCoordsParser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"BasicBoard\",\n      arePiecesDraggable: false,\n      boardWidth: props.size,\n      position: game // getPositionObject={setGame}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChessBoard, \"ZdB8mwG9D7okzXyVUEOfMVi0tgk=\");\n\n_c = ChessBoard;\nexport default ChessBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","ChessBoard","props","game","setGame","chessCoordsParser","x","parsedCoord","rootProcessing","coord","substring","length","firstLevelSplit","split","i","scdLevelSplit","key","replace","value","error","size"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/components/ChessBoard.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\n// https://www.npmjs.com/package/react-chessboard\r\n\r\nconst ChessBoard = (props) => {\r\n  const [game, setGame] = useState()\r\n\r\n  let chessCoordsParser = () => {\r\n    try{\r\n      let x = \"{a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'}\" // example\r\n    let parsedCoord = {}\r\n    let rootProcessing = props.coord.substring(1, x.length - 1)\r\n    let firstLevelSplit = rootProcessing.split(',')\r\n    for(let i = 0; i < firstLevelSplit.length; i++){\r\n        let scdLevelSplit = firstLevelSplit[i].split(':')\r\n        let key = scdLevelSplit[0].replace(/ /g, '').replace(/\"/g, '')     \r\n        let value = scdLevelSplit[1].replace(/ /g, '').replace(/'/g, '')       \r\n        parsedCoord[key] = value\r\n    }\r\n    setGame(parsedCoord)\r\n    }catch (error){\r\n      setGame('')\r\n    }\r\n    \r\n}\r\n  \r\nuseEffect(() => {\r\n  chessCoordsParser()\r\n}, [])\r\n   \r\n\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" arePiecesDraggable={false} boardWidth={props.size} \r\n                    position={game} \r\n                    // getPositionObject={setGame}\r\n                    />\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default ChessBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;;EAEA,IAAIO,iBAAiB,GAAG,MAAM;IAC5B,IAAG;MACD,IAAIC,CAAC,GAAG,yCAAR,CADC,CACiD;;MACpD,IAAIC,WAAW,GAAG,EAAlB;MACA,IAAIC,cAAc,GAAGN,KAAK,CAACO,KAAN,CAAYC,SAAZ,CAAsB,CAAtB,EAAyBJ,CAAC,CAACK,MAAF,GAAW,CAApC,CAArB;MACA,IAAIC,eAAe,GAAGJ,cAAc,CAACK,KAAf,CAAqB,GAArB,CAAtB;;MACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,eAAe,CAACD,MAAnC,EAA2CG,CAAC,EAA5C,EAA+C;QAC3C,IAAIC,aAAa,GAAGH,eAAe,CAACE,CAAD,CAAf,CAAmBD,KAAnB,CAAyB,GAAzB,CAApB;QACA,IAAIG,GAAG,GAAGD,aAAa,CAAC,CAAD,CAAb,CAAiBE,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD,CAAV;QACA,IAAIC,KAAK,GAAGH,aAAa,CAAC,CAAD,CAAb,CAAiBE,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD,CAAZ;QACAV,WAAW,CAACS,GAAD,CAAX,GAAmBE,KAAnB;MACH;;MACDd,OAAO,CAACG,WAAD,CAAP;IACC,CAZD,CAYC,OAAOY,KAAP,EAAa;MACZf,OAAO,CAAC,EAAD,CAAP;IACD;EAEJ,CAjBC;;EAmBFL,SAAS,CAAC,MAAM;IACdM,iBAAiB;EAClB,CAFQ,EAEN,EAFM,CAAT;EAKE,oBACE;IAAA,uBACE,QAAC,UAAD;MAAY,EAAE,EAAC,YAAf;MAA4B,kBAAkB,EAAE,KAAhD;MAAuD,UAAU,EAAEH,KAAK,CAACkB,IAAzE;MACc,QAAQ,EAAEjB,IADxB,CAEc;;IAFd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CArCD;;GAAMF,U;;KAAAA,U;AAuCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}