{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\components\\\\ChessBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Chessboard } from \"react-chessboard\"; // https://www.npmjs.com/package/react-chessboard\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessBoard = props => {\n  _s();\n\n  function chessCoordsParser(props) {\n    let x = \"{a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'}\";\n    let parsedCoord = {};\n    let rootProcessing = props.coord.substring(1, x.length - 1);\n    let firstLevelSplit = rootProcessing.split(',');\n\n    for (let i = 0; i < firstLevelSplit.length; i++) {\n      let scdLevelSplit = firstLevelSplit[i].split(':');\n      let key = scdLevelSplit[0].replace(/ /g, '').replace(/\"/g, '');\n      let value = scdLevelSplit[1].replace(/ /g, '').replace(/'/g, '');\n      parsedCoord[key] = value;\n    }\n\n    return parsedCoord;\n  } // const [game, setGame] = useState('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR')\n\n\n  const [game, setGame] = useState(chessCoordsParser(props)); // lista game sie nadpisuje przy kazdym ruchu, trzeba by zrobic mozliwosc ustawiania figur dowolnie\n  // trzeba by wrzucic game do bazy danych (zrobic jakas podbaze z akapitami i tablicami szachowymi do Course)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"BasicBoard\",\n      arePiecesDraggable: false,\n      boardWidth: 400,\n      position: game,\n      getPositionObject: setGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChessBoard, \"TZV8XGrHOSbR4F4ZQPcsQl6yslw=\");\n\n_c = ChessBoard;\nexport default ChessBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","Chessboard","ChessBoard","props","chessCoordsParser","x","parsedCoord","rootProcessing","coord","substring","length","firstLevelSplit","split","i","scdLevelSplit","key","replace","value","game","setGame"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/components/ChessBoard.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { Chessboard } from \"react-chessboard\";\r\n\r\n// https://www.npmjs.com/package/react-chessboard\r\n\r\nconst ChessBoard = (props) => {\r\n    \r\n  function chessCoordsParser(props){\r\n    let x = \"{a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'}\"\r\n    let parsedCoord = {}\r\n    let rootProcessing = props.coord.substring(1, x.length - 1)\r\n    let firstLevelSplit = rootProcessing.split(',')\r\n    for(let i = 0; i < firstLevelSplit.length; i++){\r\n        let scdLevelSplit = firstLevelSplit[i].split(':')\r\n        let key = scdLevelSplit[0].replace(/ /g, '').replace(/\"/g, '')     \r\n        let value = scdLevelSplit[1].replace(/ /g, '').replace(/'/g, '')       \r\n        parsedCoord[key] = value\r\n    }\r\n    return parsedCoord\r\n}\r\n\r\n\r\n    // const [game, setGame] = useState('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR')\r\n    const [game, setGame] = useState(chessCoordsParser(props))\r\n    // lista game sie nadpisuje przy kazdym ruchu, trzeba by zrobic mozliwosc ustawiania figur dowolnie\r\n    // trzeba by wrzucic game do bazy danych (zrobic jakas podbaze z akapitami i tablicami szachowymi do Course)\r\n   \r\n\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" arePiecesDraggable={false} boardWidth={400} \r\n                    position={game} \r\n                    getPositionObject={setGame}\r\n                    />\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default ChessBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAE5B,SAASC,iBAAT,CAA2BD,KAA3B,EAAiC;IAC/B,IAAIE,CAAC,GAAG,yCAAR;IACA,IAAIC,WAAW,GAAG,EAAlB;IACA,IAAIC,cAAc,GAAGJ,KAAK,CAACK,KAAN,CAAYC,SAAZ,CAAsB,CAAtB,EAAyBJ,CAAC,CAACK,MAAF,GAAW,CAApC,CAArB;IACA,IAAIC,eAAe,GAAGJ,cAAc,CAACK,KAAf,CAAqB,GAArB,CAAtB;;IACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,eAAe,CAACD,MAAnC,EAA2CG,CAAC,EAA5C,EAA+C;MAC3C,IAAIC,aAAa,GAAGH,eAAe,CAACE,CAAD,CAAf,CAAmBD,KAAnB,CAAyB,GAAzB,CAApB;MACA,IAAIG,GAAG,GAAGD,aAAa,CAAC,CAAD,CAAb,CAAiBE,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD,CAAV;MACA,IAAIC,KAAK,GAAGH,aAAa,CAAC,CAAD,CAAb,CAAiBE,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD,CAAZ;MACAV,WAAW,CAACS,GAAD,CAAX,GAAmBE,KAAnB;IACH;;IACD,OAAOX,WAAP;EACH,CAd6B,CAiB1B;;;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACI,iBAAiB,CAACD,KAAD,CAAlB,CAAhC,CAlB0B,CAmB1B;EACA;;EAGF,oBACE;IAAA,uBACE,QAAC,UAAD;MAAY,EAAE,EAAC,YAAf;MAA4B,kBAAkB,EAAE,KAAhD;MAAuD,UAAU,EAAE,GAAnE;MACc,QAAQ,EAAEe,IADxB;MAEc,iBAAiB,EAAEC;IAFjC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAjCD;;GAAMjB,U;;KAAAA,U;AAmCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}