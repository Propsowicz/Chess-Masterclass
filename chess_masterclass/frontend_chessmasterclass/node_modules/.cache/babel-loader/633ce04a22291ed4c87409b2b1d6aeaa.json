{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\pages\\\\profile_edit\\\\ForgotPass.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPass = () => {\n  // alerts\n  function alert(text, id) {\n    let alertDiv = document.querySelector(`#${id}`);\n    let msg = document.createElement('p');\n    let btn = document.querySelector('#btn-submit');\n    msg.innerText = text;\n    msg.style.color = 'red';\n    alertDiv.appendChild(msg);\n    btn.disabled = true;\n    setTimeout(() => {\n      alertDiv.removeChild(msg);\n      btn.disabled = false;\n    }, 2000);\n  }\n\n  let sendNewUserKey = async e => {\n    e.preventDefault();\n\n    if (!e.target.username.value && !e.target.email.value) {\n      alert('At least one field must be filled!', 'edit-pass');\n    } else {\n      let response = await fetch(`http://127.0.0.1:8000/member/api/forgot-pass/send`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'operation': 'send-new-key',\n          'username': e.target.username.value,\n          'email': e.target.email.value\n        })\n      });\n      let data = await response.json();\n      console.log(data);\n\n      if (response.status === 200) {\n        alert(data['Response msg'], 'edit-pass');\n      } else {\n        alert(data['Response msg'], 'edit-pass');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      width: '20rem',\n      paddingTop: '3rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Fill username or email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendNewUserKey,\n      id: \"edit-pass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-outline\",\n        id: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          className: \"form-control\",\n          name: \"username\",\n          placeholder: \"Enter Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"username-ID\",\n          className: \"form-label\",\n          htmlFor: \"username\",\n          children: \"Enter Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-outline\",\n        id: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          className: \"form-control\",\n          name: \"email\",\n          placeholder: \"Enter email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"email-ID\",\n          className: \"form-label\",\n          htmlFor: \"email\",\n          children: \"Enter email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn-submit\",\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        children: \"Send email with key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ForgotPass;\nexport default ForgotPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPass\");","map":{"version":3,"names":["React","ForgotPass","alert","text","id","alertDiv","document","querySelector","msg","createElement","btn","innerText","style","color","appendChild","disabled","setTimeout","removeChild","sendNewUserKey","e","preventDefault","target","username","value","email","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","status","width","paddingTop"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/pages/profile_edit/ForgotPass.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst ForgotPass = () => {\r\n\r\n    // alerts\r\n    function alert(text, id){\r\n        let alertDiv = document.querySelector(`#${id}`)\r\n        let msg = document.createElement('p')            \r\n        let btn = document.querySelector('#btn-submit')\r\n\r\n        msg.innerText = text\r\n        msg.style.color = 'red'\r\n        alertDiv.appendChild(msg)        \r\n        btn.disabled = true\r\n        setTimeout(() => {\r\n            alertDiv.removeChild(msg);\r\n            btn.disabled = false\r\n          }, 2000)        \r\n    }\r\n\r\n    let sendNewUserKey = async (e)  => {\r\n        e.preventDefault()\r\n\r\n        if(!e.target.username.value && !e.target.email.value){\r\n            alert('At least one field must be filled!', 'edit-pass')\r\n            \r\n        }else{\r\n            let response = await fetch(`http://127.0.0.1:8000/member/api/forgot-pass/send`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                'operation': 'send-new-key',\r\n                'username': e.target.username.value,\r\n                'email': e.target.email.value,\r\n            })\r\n            })\r\n            let data = await response.json()\r\n            console.log(data)\r\n\r\n            if(response.status === 200){\r\n                alert(data['Response msg'], 'edit-pass')\r\n                        \r\n            }else{\r\n                alert(data['Response msg'], 'edit-pass')\r\n            }\r\n        }  \r\n        \r\n    }\r\n\r\n  return (  \r\n\r\n    <div className='container' style={{width: '20rem',paddingTop:'3rem',}}>\r\n        <h3>Fill username or email address</h3>\r\n        <form onSubmit={sendNewUserKey} id='edit-pass'>\r\n            <div className=\"form-outline\" id='username'>\r\n                <input id='username' type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Enter Username\"/>\r\n                <label id='username-ID' className=\"form-label\" htmlFor=\"username\">Enter Username</label>\r\n            </div>\r\n            <div className=\"form-outline\" id='email'>\r\n                <input id='email' type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter email address\"/>\r\n                <label id='email-ID' className=\"form-label\" htmlFor=\"email\">Enter email address</label>\r\n            </div>\r\n            \r\n            <button id='btn-submit' type=\"submit\" className=\"btn btn-primary btn-block\" >Send email with key</button>\r\n            \r\n        </form>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPass"],"mappings":"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"},"metadata":{},"sourceType":"module"}