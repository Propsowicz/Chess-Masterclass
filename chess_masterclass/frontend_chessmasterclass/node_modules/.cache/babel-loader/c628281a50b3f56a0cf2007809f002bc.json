{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\components\\\\ChessBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Chessboard } from \"react-chessboard\";\nimport { chessCoordsParser } from '../utils/utlis'; // https://www.npmjs.com/package/react-chessboard\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessBoard = props => {\n  _s();\n\n  // const [game, setGame] = useState('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR')\n  const [game, setGame] = useState({\n    a8: 'bR',\n    a7: 'bP',\n    a1: 'wR',\n    a2: 'wP'\n  }); // lista game sie nadpisuje przy kazdym ruchu, trzeba by zrobic mozliwosc ustawiania figur dowolnie\n  // trzeba by wrzucic game do bazy danych (zrobic jakas podbaze z akapitami i tablicami szachowymi do Course)\n  // console.log(props.coord)\n  // console.log(game)\n\n  let x = \"{a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'}\";\n  let y = x.substring(1, x.length - 1);\n  console.log(y);\n  let z = y.split(',');\n  console.log('lista z ' + z);\n  let cat = {};\n\n  for (let i = 0; i < z.length; i++) {\n    let dick = z[i].split(':');\n    console.log(dick);\n    let key = dick[0].replace(' ', '');\n    let key1 = key.replace('\"', '');\n    let value = dick[1].replace(' ', '');\n    let value1 = value.replace('\"', '').substring(1, value.length - 1);\n    console.log(key1 + value1);\n    cat[key1] = value1;\n  }\n\n  console.log(cat);\n  console.log(chessCoordsParser(props));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"BasicBoard\",\n      arePiecesDraggable: true,\n      boardWidth: 500,\n      position: game,\n      getPositionObject: setGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChessBoard, \"/hfJJ//BdJUmxkdjJFh2Zg1QhMM=\");\n\n_c = ChessBoard;\nexport default ChessBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","Chessboard","chessCoordsParser","ChessBoard","props","game","setGame","a8","a7","a1","a2","x","y","substring","length","console","log","z","split","cat","i","dick","key","replace","key1","value","value1"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/components/ChessBoard.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { Chessboard } from \"react-chessboard\";\r\nimport {chessCoordsParser} from '../utils/utlis'\r\n\r\n// https://www.npmjs.com/package/react-chessboard\r\n\r\nconst ChessBoard = (props) => {\r\n    \r\n\r\n\r\n    // const [game, setGame] = useState('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR')\r\n    const [game, setGame] = useState({a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'})\r\n    // lista game sie nadpisuje przy kazdym ruchu, trzeba by zrobic mozliwosc ustawiania figur dowolnie\r\n    // trzeba by wrzucic game do bazy danych (zrobic jakas podbaze z akapitami i tablicami szachowymi do Course)\r\n    // console.log(props.coord)\r\n    // console.log(game)\r\n    let x = \"{a8: 'bR', a7: 'bP', a1:'wR', a2: 'wP'}\"\r\n    let y = x.substring(1, x.length - 1)\r\n    console.log(y)\r\n    let z = y.split(',')\r\n    console.log('lista z ' +  z)\r\n    let cat = {}\r\n    for(let i = 0; i < z.length; i++){\r\n      let dick = z[i].split(':')\r\n      console.log(dick)\r\n      let key = dick[0].replace(' ', '')\r\n      let key1 = key.replace('\"', '')\r\n      let value = dick[1].replace(' ', '')\r\n      let value1 = value.replace('\"', '').substring(1, value.length - 1)\r\n      console.log(key1 + value1)\r\n      cat[key1] = value1\r\n    }\r\n    console.log(cat)\r\n    console.log(chessCoordsParser(props))\r\n\r\n  return (\r\n    <div>\r\n        <Chessboard id=\"BasicBoard\" arePiecesDraggable={true} boardWidth={500} \r\n         position={game} \r\n         getPositionObject={setGame}\r\n        />\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChessBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,iBAAR,QAAgC,gBAAhC,C,CAEA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAI1B;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAACO,EAAE,EAAE,IAAL;IAAWC,EAAE,EAAE,IAAf;IAAqBC,EAAE,EAAC,IAAxB;IAA8BC,EAAE,EAAE;EAAlC,CAAD,CAAhC,CAL0B,CAM1B;EACA;EACA;EACA;;EACA,IAAIC,CAAC,GAAG,yCAAR;EACA,IAAIC,CAAC,GAAGD,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeF,CAAC,CAACG,MAAF,GAAW,CAA1B,CAAR;EACAC,OAAO,CAACC,GAAR,CAAYJ,CAAZ;EACA,IAAIK,CAAC,GAAGL,CAAC,CAACM,KAAF,CAAQ,GAAR,CAAR;EACAH,OAAO,CAACC,GAAR,CAAY,aAAcC,CAA1B;EACA,IAAIE,GAAG,GAAG,EAAV;;EACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,CAAC,CAACH,MAArB,EAA6BM,CAAC,EAA9B,EAAiC;IAC/B,IAAIC,IAAI,GAAGJ,CAAC,CAACG,CAAD,CAAD,CAAKF,KAAL,CAAW,GAAX,CAAX;IACAH,OAAO,CAACC,GAAR,CAAYK,IAAZ;IACA,IAAIC,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CAAV;IACA,IAAIC,IAAI,GAAGF,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAX;IACA,IAAIE,KAAK,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CAAZ;IACA,IAAIG,MAAM,GAAGD,KAAK,CAACF,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBV,SAAvB,CAAiC,CAAjC,EAAoCY,KAAK,CAACX,MAAN,GAAe,CAAnD,CAAb;IACAC,OAAO,CAACC,GAAR,CAAYQ,IAAI,GAAGE,MAAnB;IACAP,GAAG,CAACK,IAAD,CAAH,GAAYE,MAAZ;EACD;;EACDX,OAAO,CAACC,GAAR,CAAYG,GAAZ;EACAJ,OAAO,CAACC,GAAR,CAAYd,iBAAiB,CAACE,KAAD,CAA7B;EAEF,oBACE;IAAA,uBACI,QAAC,UAAD;MAAY,EAAE,EAAC,YAAf;MAA4B,kBAAkB,EAAE,IAAhD;MAAsD,UAAU,EAAE,GAAlE;MACC,QAAQ,EAAEC,IADX;MAEC,iBAAiB,EAAEC;IAFpB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAtCD;;GAAMH,U;;KAAAA,U;AAwCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}