{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\components\\\\CoursesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CourseListItem from './CourseListItem';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoursesList = props => {\n  _s();\n\n  let location = useLocation();\n  let page = useParams().page; // create empty list of courses with can be overwrtten\n\n  let [coursesList, setCoursesList] = useState([]); // function which call for api port with list of all courses\n\n  let coursesGET = async () => {\n    // if(props.filter){\n    //     let response = await fetch(`http://127.0.0.1:8000/api/courses/filter/free`)\n    //     let data = await response.json()\n    //     setCoursesList(data)\n    // }else{\n    // let filterPath = 'filter'\n    // for (let key in props.filter){\n    //     if(props.filter[key]){\n    //         filterPath = filterPath + `;${key}`\n    //     }            \n    //   }\n    // console.log(filterPath)\n    let response = await fetch(`http://127.0.0.1:8000/api/courses/${props.sort_by}/${props.filter}/${props.search}/${props.page}`);\n    let data = await response.json();\n    console.log(data.data);\n    setCoursesList(data.data); // if(location.pathname === '/'){\n    //     let response = await fetch(`http://127.0.0.1:8000/api/courses/page/${props.page}`)\n    //     let data = await response.json()\n    //     setCoursesList(data)\n    // }else{\n    //     let response = await fetch(`http://127.0.0.1:8000/api/courses/page/${props.page}`)\n    //     let data = await response.json()\n    //     setCoursesList(data)            \n    // } \n    // }     \n  }; // effect function to check if there is an API call possible\n\n\n  useEffect(() => {\n    coursesGET();\n    console.log('course list:   ' + props.representChessTable);\n  }, [props.filter, props.page, props.sort_by, props.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row row-cols-1 row-cols-md-4 g-4\",\n    children: coursesList.map((course, index) => /*#__PURE__*/_jsxDEV(CourseListItem, {\n      name: course.name,\n      body: course.body,\n      price: course.price,\n      id: course.id,\n      slug: course.slug,\n      premiumPlan: course.premiumPlan,\n      representChessTable: course.representationChessBoard\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoursesList, \"XyxGem3S0NJXEhDPs8cM35IpcWQ=\", false, function () {\n  return [useLocation, useParams];\n});\n\n_c = CoursesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesList\");","map":{"version":3,"names":["React","useState","useEffect","CourseListItem","useLocation","useParams","CoursesList","props","location","page","coursesList","setCoursesList","coursesGET","response","fetch","sort_by","filter","search","data","json","console","log","representChessTable","map","course","index","name","body","price","id","slug","premiumPlan","representationChessBoard"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/components/CoursesList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport CourseListItem from './CourseListItem'\r\nimport { useLocation, useParams  } from 'react-router-dom'\r\n\r\n\r\nexport const CoursesList = (props) => {\r\n    let location = useLocation()\r\n    let page = useParams().page\r\n\r\n    // create empty list of courses with can be overwrtten\r\n    let [coursesList, setCoursesList] = useState([])\r\n\r\n    // function which call for api port with list of all courses\r\n    let coursesGET = async () => {\r\n        // if(props.filter){\r\n        //     let response = await fetch(`http://127.0.0.1:8000/api/courses/filter/free`)\r\n        //     let data = await response.json()\r\n        //     setCoursesList(data)\r\n        // }else{\r\n        // let filterPath = 'filter'\r\n        // for (let key in props.filter){\r\n        //     if(props.filter[key]){\r\n        //         filterPath = filterPath + `;${key}`\r\n        //     }            \r\n        //   }\r\n        // console.log(filterPath)\r\n\r\n        let response = await fetch(`http://127.0.0.1:8000/api/courses/${props.sort_by}/${props.filter}/${props.search}/${props.page}`)\r\n        let data = await response.json()\r\n        console.log(data.data)\r\n        setCoursesList(data.data)\r\n        \r\n\r\n        // if(location.pathname === '/'){\r\n        //     let response = await fetch(`http://127.0.0.1:8000/api/courses/page/${props.page}`)\r\n        //     let data = await response.json()\r\n        //     setCoursesList(data)\r\n        // }else{\r\n        //     let response = await fetch(`http://127.0.0.1:8000/api/courses/page/${props.page}`)\r\n        //     let data = await response.json()\r\n        //     setCoursesList(data)            \r\n        // } \r\n        // }     \r\n    }\r\n\r\n    \r\n\r\n    // effect function to check if there is an API call possible\r\n    useEffect(() => {\r\n        coursesGET()\r\n        console.log('course list:   '+props.representChessTable)\r\n    }, [props.filter, props.page, props.sort_by, props.search])\r\n    \r\n  return (\r\n    <div  className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n        {coursesList.map((course, index) => (\r\n            <CourseListItem key={index} name={course.name} body={course.body} price={course.price} id={course.id} slug={course.slug} premiumPlan={course.premiumPlan} representChessTable={course.representationChessBoard}/>\r\n        ))}\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAwC,kBAAxC;;AAGA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAClC,IAAIC,QAAQ,GAAGJ,WAAW,EAA1B;EACA,IAAIK,IAAI,GAAGJ,SAAS,GAAGI,IAAvB,CAFkC,CAIlC;;EACA,IAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA5C,CALkC,CAOlC;;EACA,IAAIW,UAAU,GAAG,YAAY;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCP,KAAK,CAACQ,OAAQ,IAAGR,KAAK,CAACS,MAAO,IAAGT,KAAK,CAACU,MAAO,IAAGV,KAAK,CAACE,IAAK,EAAlG,CAA1B;IACA,IAAIS,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;IACAP,cAAc,CAACO,IAAI,CAACA,IAAN,CAAd,CAjByB,CAoBzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CA9BD,CARkC,CA0ClC;;;EACAhB,SAAS,CAAC,MAAM;IACZU,UAAU;IACVQ,OAAO,CAACC,GAAR,CAAY,oBAAkBd,KAAK,CAACe,mBAApC;EACH,CAHQ,EAGN,CAACf,KAAK,CAACS,MAAP,EAAeT,KAAK,CAACE,IAArB,EAA2BF,KAAK,CAACQ,OAAjC,EAA0CR,KAAK,CAACU,MAAhD,CAHM,CAAT;EAKF,oBACE;IAAM,SAAS,EAAC,kCAAhB;IAAA,UACKP,WAAW,CAACa,GAAZ,CAAgB,CAACC,MAAD,EAASC,KAAT,kBACb,QAAC,cAAD;MAA4B,IAAI,EAAED,MAAM,CAACE,IAAzC;MAA+C,IAAI,EAAEF,MAAM,CAACG,IAA5D;MAAkE,KAAK,EAAEH,MAAM,CAACI,KAAhF;MAAuF,EAAE,EAAEJ,MAAM,CAACK,EAAlG;MAAsG,IAAI,EAAEL,MAAM,CAACM,IAAnH;MAAyH,WAAW,EAAEN,MAAM,CAACO,WAA7I;MAA0J,mBAAmB,EAAEP,MAAM,CAACQ;IAAtL,GAAqBP,KAArB;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAxDM;;GAAMnB,W;UACMF,W,EACJC,S;;;KAFFC,W"},"metadata":{},"sourceType":"module"}