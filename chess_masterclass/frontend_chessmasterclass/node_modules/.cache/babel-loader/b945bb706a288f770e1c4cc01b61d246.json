{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\pages\\\\CoursePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport { checkCurrentPremiumPlan } from '../utils/utlis';\nimport { BsFillHeartFill } from 'react-icons/bs';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport ChessBoard from '../components/ChessBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursePage = () => {\n  _s();\n\n  let {\n    userInfo\n  } = useContext(UserContext);\n  let navigate = useNavigate(); // get dynamic ID (from App.js course/:id)\n\n  let courseSlug = useParams().slug; // list of course detail\n\n  let [courseDetails, setcourseDetails] = useState([]);\n  let [chessTables, setChessTables] = useState([]); // fetch course details\n\n  let courseDetailGET = async () => {\n    let response = await fetch(`http://127.0.0.1:8000/api/courses/${courseSlug}`);\n    let data = await response.json();\n    setcourseDetails(data);\n  }; // function which call for api port with chess tables\n\n\n  let tablesGET = async () => {\n    let response = await fetch(`http://127.0.0.1:8000/api/courses/${courseSlug}/table`);\n    let data = await response.json();\n    setChessTables(data);\n  };\n\n  let checkIfLiked = () => {\n    if (courseSlug in userInfo.liked_courses) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  let checkPermission = () => {\n    if (!checkCurrentPremiumPlan(courseDetails, userInfo)) {\n      navigate();\n    }\n  }; // effect function to check if there is an API call possible\n\n\n  useEffect(() => {\n    courseDetailGET();\n    tablesGET();\n    checkPermission();\n  }, []);\n\n  let navigateToHomePage = () => {\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-1\",\n        children: [courseDetails.name, \" \", checkIfLiked ? /*#__PURE__*/_jsxDEV(BsFillHeartFill, {\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 74\n        }, this) : /*#__PURE__*/_jsxDEV(BsFillHeartFill, {\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 108\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-6\",\n        children: courseDetails.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), chessTables.map((table, index) => /*#__PURE__*/_jsxDEV(ChessBoard, {\n        text: table.text,\n        coord: table.coord\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoursePage, \"KzP6BwNwPkTopLC1ZK9UBtOBRxI=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = CoursePage;\nexport default CoursePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","checkCurrentPremiumPlan","BsFillHeartFill","useParams","Link","useNavigate","ChessBoard","CoursePage","userInfo","navigate","courseSlug","slug","courseDetails","setcourseDetails","chessTables","setChessTables","courseDetailGET","response","fetch","data","json","tablesGET","checkIfLiked","liked_courses","checkPermission","navigateToHomePage","name","body","map","table","index","text","coord"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/pages/CoursePage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport {UserContext} from '../context/UserContext'\r\nimport {checkCurrentPremiumPlan} from '../utils/utlis'\r\nimport { BsFillHeartFill } from 'react-icons/bs'\r\n\r\nimport {\r\n    useParams,\r\n    Link,\r\n    useNavigate\r\n} from 'react-router-dom'\r\nimport ChessBoard from '../components/ChessBoard'\r\n\r\nconst CoursePage = () => {\r\n    let {userInfo} = useContext(UserContext)\r\n    let navigate = useNavigate()\r\n    \r\n    // get dynamic ID (from App.js course/:id)\r\n    let courseSlug = useParams().slug\r\n\r\n    // list of course detail\r\n    let [courseDetails, setcourseDetails] = useState([])\r\n    let [chessTables, setChessTables] = useState([])\r\n\r\n    // fetch course details\r\n    let courseDetailGET = async () => {\r\n        let response = await fetch(`http://127.0.0.1:8000/api/courses/${courseSlug}`)\r\n        let data = await response.json()\r\n        setcourseDetails(data)\r\n    }\r\n        \r\n    // function which call for api port with chess tables\r\n    let tablesGET = async () => {\r\n        let response = await fetch(`http://127.0.0.1:8000/api/courses/${courseSlug}/table`)\r\n        let data = await response.json()\r\n        setChessTables(data)\r\n    }\r\n\r\n    let checkIfLiked = () => {\r\n        if(courseSlug in userInfo.liked_courses){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n    let checkPermission = () => {\r\n        if(!checkCurrentPremiumPlan(courseDetails, userInfo)){\r\n            navigate()\r\n        }\r\n    }\r\n\r\n    // effect function to check if there is an API call possible\r\n    useEffect(() => {\r\n        courseDetailGET()\r\n        tablesGET()\r\n        checkPermission()\r\n    }, [])\r\n\r\n    \r\n    \r\n\r\n    let navigateToHomePage = () => {\r\n        navigate('/')\r\n    }  \r\n\r\n  return (\r\n    <div className='container'>\r\n            <div>\r\n                <p className=\"fs-1\">{courseDetails.name} {checkIfLiked ? <BsFillHeartFill color='red' /> : <BsFillHeartFill color='black' /> }</p>\r\n                <p className=\"fs-6\">{courseDetails.body}</p>   \r\n                {chessTables.map((table, index) => (\r\n                    <ChessBoard key={index} text={table.text} coord={table.coord} />\r\n                ))}\r\n\r\n                \r\n            </div>\r\n          \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoursePage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,uBAAR,QAAsC,gBAAtC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,WAHJ,QAIO,kBAJP;AAKA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,IAAI;IAACC;EAAD,IAAaT,UAAU,CAACC,WAAD,CAA3B;EACA,IAAIS,QAAQ,GAAGJ,WAAW,EAA1B,CAFqB,CAIrB;;EACA,IAAIK,UAAU,GAAGP,SAAS,GAAGQ,IAA7B,CALqB,CAOrB;;EACA,IAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAhD;EACA,IAAI,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA5C,CATqB,CAWrB;;EACA,IAAImB,eAAe,GAAG,YAAY;IAC9B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCR,UAAW,EAAjD,CAA1B;IACA,IAAIS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAP,gBAAgB,CAACM,IAAD,CAAhB;EACH,CAJD,CAZqB,CAkBrB;;;EACA,IAAIE,SAAS,GAAG,YAAY;IACxB,IAAIJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCR,UAAW,QAAjD,CAA1B;IACA,IAAIS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAL,cAAc,CAACI,IAAD,CAAd;EACH,CAJD;;EAMA,IAAIG,YAAY,GAAG,MAAM;IACrB,IAAGZ,UAAU,IAAIF,QAAQ,CAACe,aAA1B,EAAwC;MACpC,OAAO,IAAP;IACH,CAFD,MAEK;MACD,OAAO,KAAP;IACH;EACJ,CAND;;EAOA,IAAIC,eAAe,GAAG,MAAM;IACxB,IAAG,CAACvB,uBAAuB,CAACW,aAAD,EAAgBJ,QAAhB,CAA3B,EAAqD;MACjDC,QAAQ;IACX;EACJ,CAJD,CAhCqB,CAsCrB;;;EACAX,SAAS,CAAC,MAAM;IACZkB,eAAe;IACfK,SAAS;IACTG,eAAe;EAClB,CAJQ,EAIN,EAJM,CAAT;;EASA,IAAIC,kBAAkB,GAAG,MAAM;IAC3BhB,QAAQ,CAAC,GAAD,CAAR;EACH,CAFD;;EAIF,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACQ;MAAA,wBACI;QAAG,SAAS,EAAC,MAAb;QAAA,WAAqBG,aAAa,CAACc,IAAnC,OAA0CJ,YAAY,gBAAG,QAAC,eAAD;UAAiB,KAAK,EAAC;QAAvB;UAAA;UAAA;UAAA;QAAA,QAAH,gBAAqC,QAAC,eAAD;UAAiB,KAAK,EAAC;QAAvB;UAAA;UAAA;UAAA;QAAA,QAA3F;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,SAAS,EAAC,MAAb;QAAA,UAAqBV,aAAa,CAACe;MAAnC;QAAA;QAAA;QAAA;MAAA,QAFJ,EAGKb,WAAW,CAACc,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBACb,QAAC,UAAD;QAAwB,IAAI,EAAED,KAAK,CAACE,IAApC;QAA0C,KAAK,EAAEF,KAAK,CAACG;MAAvD,GAAiBF,KAAjB;QAAA;QAAA;QAAA;MAAA,QADH,CAHL;IAAA;MAAA;MAAA;MAAA;IAAA;EADR;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAnED;;GAAMvB,U;UAEaF,W,EAGEF,S;;;KALfI,U;AAqEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}