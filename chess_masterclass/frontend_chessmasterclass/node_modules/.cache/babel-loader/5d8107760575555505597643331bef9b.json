{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import jwt_decode from'jwt-decode';import{alertMsg}from'../utils/utlis';// create user context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var UserContext=/*#__PURE__*/createContext();// create provider\nexport var UserContextProvider=function UserContextProvider(_ref){var children=_ref.children;// lists with user/auth data\n// check if there are tokens in local storage: if they are overwrite lists \nvar _useState=useState(localStorage.getItem('authTokens')?JSON.parse(localStorage.getItem('authTokens')):[]),_useState2=_slicedToArray(_useState,2),authTokens=_useState2[0],setAuthTokens=_useState2[1];var _useState3=useState(localStorage.getItem('authTokens')?jwt_decode(JSON.parse(localStorage.getItem('authTokens')).access):[]),_useState4=_slicedToArray(_useState3,2),userInfo=_useState4[0],setUserInfo=_useState4[1];// func to navigate (ie to homepage)\nvar navigate=useNavigate();// func to login user: from form(onSubmit) in Login.js get username and pass and send it to API. In reverse get tokens (custom one have all needed data)\nvar login=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// let btnToBlock = document.querySelector('#btn-login')  \n// btnToBlock.disabled = true \ne.preventDefault();// call to API\n_context.next=3;return fetch('http://127.0.0.1:8000/member/api/token/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':e.target.username.value,'password':e.target.password.value})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;// if status-200 then set Lists with data and save tokens in localstorage\nif(response.status===200){setAuthTokens(data);setUserInfo(jwt_decode(data.access));localStorage.setItem('authTokens',JSON.stringify(data));navigate('/');}else if(response.status===401){alertMsg('login-form','Username or password is not correct. Try again.','btn-login');}else if(response.status===400){alertMsg('login-form','Please fill all fields.','btn-login');}else{console.log('smth went wrong');}// btnToBlock.disabled = true \ncase 8:case\"end\":return _context.stop();}}},_callee);}));return function login(_x){return _ref2.apply(this,arguments);};}();// update refresh token every 4 mins\nvar updateTokens=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://127.0.0.1:8000/member/api/token/refresh/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'refresh':authTokens===null||authTokens===void 0?void 0:authTokens.refresh})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;// if status-200 then set Lists with data and save tokens in localstorage\nif(response.status===200){setAuthTokens(data);setUserInfo(jwt_decode(data.access));localStorage.setItem('authTokens',JSON.stringify(data));}// else: smth is wrong and logout\nelse{logout();}case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function updateTokens(){return _ref3.apply(this,arguments);};}();// logout\nvar logout=function logout(){setAuthTokens([]);setUserInfo([]);localStorage.clear();navigate('/');};// register\nvar register=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e){var btnToBlock,response,status;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:btnToBlock=document.querySelector('#btn-submit-register');btnToBlock.disabled=true;e.preventDefault();if(!(e.target.username.value&&e.target.password.value&&e.target.password2.value&&e.target.email.value)){_context3.next=17;break;}if(!(e.target.password.value===e.target.password2.value)){_context3.next=14;break;}_context3.next=7;return fetch('http://127.0.0.1:8000/member/api/register/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':e.target.username.value,'password':e.target.password.value,'email':e.target.email.value})});case 7:response=_context3.sent;_context3.next=10;return response.json();case 10:status=_context3.sent;if(response.status===200||response.status===201){alertMsg('submit-field','Account has been created. Check you email to complete registration process.','btn-submit-register');setTimeout(function(){navigate('/');},3000);}else if(status['username']){alertMsg('username',status['username'][0],'btn-submit-register');}else if(status['email']){alertMsg('email',status['email'][0],'btn-submit-register');}else if(status.password){status.password[0].forEach(function(msg){alertMsg('password2',msg,'btn-submit-register');});}else{console.log('smth went wrong..');}_context3.next=15;break;case 14:alertMsg('password2','Passwords are not the same.','btn-submit-register');case 15:_context3.next=18;break;case 17:alertMsg('submit-field','Please fill all fields.','btn-submit-register');case 18:btnToBlock.disabled=false;case 19:case\"end\":return _context3.stop();}}},_callee3);}));return function register(_x2){return _ref4.apply(this,arguments);};}();useEffect(function(){var fourMinutes=1000*4*60;var interval=setInterval(function(){updateTokens();},fourMinutes);return function(){return clearInterval(interval);};},[]);// collection of data to hook between components\nvar contextData={// data\nuserInfo:userInfo,// functions        \nregister:register,login:login,logout:logout};// provider DOM\nreturn/*#__PURE__*/_jsx(UserContext.Provider,{value:contextData,children:children});};","map":{"version":3,"names":["React","createContext","useEffect","useState","useNavigate","jwt_decode","alertMsg","UserContext","UserContextProvider","children","localStorage","getItem","JSON","parse","authTokens","setAuthTokens","access","userInfo","setUserInfo","navigate","login","e","preventDefault","fetch","method","headers","body","stringify","target","username","value","password","response","json","data","status","setItem","console","log","updateTokens","refresh","logout","clear","register","btnToBlock","document","querySelector","disabled","password2","email","setTimeout","forEach","msg","fourMinutes","interval","setInterval","clearInterval","contextData"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/context/UserContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport jwt_decode from 'jwt-decode'\r\nimport {alertMsg} from '../utils/utlis'\r\n\r\n// create user context\r\nexport const UserContext = createContext()\r\n\r\n// create provider\r\nexport const UserContextProvider = ({children}) => {   \r\n\r\n    // lists with user/auth data\r\n    // check if there are tokens in local storage: if they are overwrite lists \r\n    let [authTokens, setAuthTokens] = useState(localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : [])\r\n    let [userInfo, setUserInfo] = useState(localStorage.getItem('authTokens') ? jwt_decode(JSON.parse(localStorage.getItem('authTokens')).access) : [])\r\n\r\n    // func to navigate (ie to homepage)\r\n    const navigate = useNavigate()\r\n\r\n    // func to login user: from form(onSubmit) in Login.js get username and pass and send it to API. In reverse get tokens (custom one have all needed data)\r\n    let login = async (e) => {\r\n        // let btnToBlock = document.querySelector('#btn-login')  \r\n        // btnToBlock.disabled = true \r\n        e.preventDefault()\r\n\r\n        // call to API\r\n        let response = await fetch('http://127.0.0.1:8000/member/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({'username': e.target.username.value, 'password': e.target.password.value}),\r\n        })\r\n        // get tokens in reponse\r\n        let data = await response.json()        \r\n\r\n        // if status-200 then set Lists with data and save tokens in localstorage\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUserInfo(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))   \r\n            navigate('/')\r\n        }else if(response.status === 401){\r\n            alertMsg('login-form', 'Username or password is not correct. Try again.', 'btn-login')\r\n        }else if(response.status === 400){\r\n            alertMsg('login-form', 'Please fill all fields.', 'btn-login')\r\n        }else{\r\n            console.log('smth went wrong')\r\n        }\r\n        // btnToBlock.disabled = true \r\n\r\n    }\r\n\r\n    // update refresh token every 4 mins\r\n    let updateTokens = async () => {        \r\n        // call to API\r\n        let response = await fetch('http://127.0.0.1:8000/member/api/token/refresh/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({'refresh': authTokens?.refresh}),\r\n        })\r\n        // get tokens in reponse\r\n        let data = await response.json()\r\n\r\n        // if status-200 then set Lists with data and save tokens in localstorage\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUserInfo(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))              \r\n        }\r\n        // else: smth is wrong and logout\r\n        else{\r\n            logout()\r\n        }\r\n    }\r\n\r\n    // logout\r\n    let logout = () => {\r\n        setAuthTokens([])\r\n        setUserInfo([])\r\n        localStorage.clear() \r\n        navigate('/')\r\n    }   \r\n\r\n    // register\r\n    let register = async (e) => {\r\n        let btnToBlock = document.querySelector('#btn-submit-register')  \r\n        btnToBlock.disabled = true \r\n        e.preventDefault()\r\n        if(e.target.username.value && e.target.password.value && e.target.password2.value && e.target.email.value){\r\n            if(e.target.password.value === e.target.password2.value){\r\n                let response = await fetch('http://127.0.0.1:8000/member/api/register/', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({  'username': e.target.username.value,\r\n                                                'password': e.target.password.value,\r\n                                                'email':    e.target.email.value,        \r\n                    })\r\n                    })\r\n                    let status = await response.json()                    \r\n                    \r\n                    if(response.status === 200 || response.status === 201){\r\n                        alertMsg('submit-field', 'Account has been created. Check you email to complete registration process.', 'btn-submit-register')\r\n                        setTimeout(() => {\r\n                            navigate('/')\r\n     \r\n                        }, 3000)\r\n                    }else if(status['username']){\r\n                        alertMsg('username', status['username'][0], 'btn-submit-register')\r\n                    }else if(status['email']){\r\n                        alertMsg('email', status['email'][0], 'btn-submit-register')\r\n                    }else if(status.password){\r\n                        status.password[0].forEach(msg => {\r\n                            alertMsg('password2', msg, 'btn-submit-register')                           \r\n                        });                        \r\n                    }else{\r\n                        console.log('smth went wrong..')\r\n                    }\r\n            }else{\r\n                alertMsg('password2', 'Passwords are not the same.', 'btn-submit-register')\r\n            }                                                       \r\n                \r\n        }else{\r\n            alertMsg('submit-field', 'Please fill all fields.', 'btn-submit-register')\r\n        }\r\n        btnToBlock.disabled = false \r\n    }\r\n\r\n    useEffect(() => {\r\n        let fourMinutes = 1000 * 4 * 60\r\n        let interval = setInterval(() => {\r\n            updateTokens()\r\n        }, fourMinutes)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    // collection of data to hook between components\r\n    let contextData = {\r\n        // data\r\n        userInfo: userInfo,\r\n\r\n        // functions        \r\n        register: register,\r\n        login: login,\r\n        logout: logout,\r\n    }\r\n\r\n    // provider DOM\r\n    return(\r\n        <UserContext.Provider value={contextData}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}