{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\frontend\\\\chessmasterclass\\\\src\\\\context\\\\UserContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode'; // create user context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(); // create provider\n\nexport const UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // lists with user/auth data\n  // check if there are tokens in local storage: if they are overwrite lists \n  let [authTokens, setAuthTokens] = useState(localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : []);\n  let [userInfo, setUserInfo] = useState(localStorage.getItem('authTokens') ? jwt_decode(JSON.parse(localStorage.getItem('authTokens')).access) : []); // func to navigate (ie to homepage)\n\n  const navigate = useNavigate(); // func to login user: from form(onSubmit) in Login.js get username and pass and send it to API. In reverse get tokens (custom one have all needed data)\n\n  let login = async e => {\n    e.preventDefault(); // call to API\n\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    }); // get tokens in reponse\n\n    let data = await response.json(); // if status-200 then set Lists with data and save tokens in localstorage\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUserInfo(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/');\n    } else if (response.status === 401) {\n      console.log('wrong pass or username');\n    } else {\n      console.log('smth went wrong');\n    }\n  };\n\n  let updateTokens = async () => {\n    // call to API\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    }); // get tokens in reponse\n\n    let data = await response.json(); // if status-200 then set Lists with data and save tokens in localstorage\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUserInfo(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      console.log('smth went wrong');\n    }\n  }; // logout\n\n\n  let logout = () => {\n    setAuthTokens([]);\n    setUserInfo([]);\n    localStorage.clear();\n    navigate('/');\n  };\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      updateTokens();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []); // collection of data to hook between components\n\n  let contextData = {\n    // data\n    userInfo: userInfo,\n    // functions\n    login: login,\n    logout: logout\n  }; // provider DOM\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"tzdWcFL1gLCz1wnMzGX96aOvzrY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useNavigate","jwt_decode","UserContext","UserContextProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","userInfo","setUserInfo","access","navigate","login","e","preventDefault","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","setItem","console","log","updateTokens","refresh","logout","clear","interval","setInterval","clearInterval","contextData"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/frontend/chessmasterclass/src/context/UserContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\n// create user context\r\nexport const UserContext = createContext()\r\n\r\n// create provider\r\nexport const UserContextProvider = ({children}) => {   \r\n\r\n    // lists with user/auth data\r\n    // check if there are tokens in local storage: if they are overwrite lists \r\n    let [authTokens, setAuthTokens] = useState(localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : [])\r\n    let [userInfo, setUserInfo] = useState(localStorage.getItem('authTokens') ? jwt_decode(JSON.parse(localStorage.getItem('authTokens')).access) : [])\r\n\r\n    // func to navigate (ie to homepage)\r\n    const navigate = useNavigate()\r\n\r\n    // func to login user: from form(onSubmit) in Login.js get username and pass and send it to API. In reverse get tokens (custom one have all needed data)\r\n    let login = async (e) => {\r\n        e.preventDefault()\r\n\r\n        // call to API\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({'username': e.target.username.value, 'password': e.target.password.value}),\r\n        })\r\n        // get tokens in reponse\r\n        let data = await response.json()\r\n\r\n        // if status-200 then set Lists with data and save tokens in localstorage\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUserInfo(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))   \r\n            navigate('/')\r\n        }else if(response.status === 401){\r\n            console.log('wrong pass or username')\r\n        }\r\n        else{\r\n            console.log('smth went wrong')\r\n        }\r\n    }\r\n\r\n    let updateTokens = async () => {\r\n        // call to API\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({'refresh': authTokens?.refresh}),\r\n        })\r\n        // get tokens in reponse\r\n        let data = await response.json()\r\n\r\n        // if status-200 then set Lists with data and save tokens in localstorage\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUserInfo(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))              \r\n        }\r\n        else{\r\n            console.log('smth went wrong')\r\n        }\r\n    }\r\n\r\n\r\n    // logout\r\n    let logout = () => {\r\n        setAuthTokens([])\r\n        setUserInfo([])\r\n        localStorage.clear() \r\n        navigate('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n            updateTokens()\r\n        }, 2000)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    // collection of data to hook between components\r\n    let contextData = {\r\n        // data\r\n        userInfo: userInfo,\r\n\r\n        // functions\r\n        login: login,\r\n        logout: logout,\r\n    }\r\n\r\n    // provider DOM\r\n    return(\r\n        <UserContext.Provider value={contextData}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}