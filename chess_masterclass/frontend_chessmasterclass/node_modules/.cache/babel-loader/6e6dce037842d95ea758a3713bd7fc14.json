{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\chess-masterclass\\\\backend\\\\chess_masterclass\\\\frontend_chessmasterclass\\\\src\\\\components\\\\ChessBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Chessboard } from \"react-chessboard\";\nimport { chessCoordsParser } from '../utils/utlis'; // https://www.npmjs.com/package/react-chessboard\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessBoard = props => {\n  _s();\n\n  // const [game, setGame] = useState('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR')\n  const [game, setGame] = useState(chessCoordsParser(props)); // lista game sie nadpisuje przy kazdym ruchu, trzeba by zrobic mozliwosc ustawiania figur dowolnie\n  // trzeba by wrzucic game do bazy danych (zrobic jakas podbaze z akapitami i tablicami szachowymi do Course)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"BasicBoard\",\n      arePiecesDraggable: false,\n      boardWidth: 400,\n      position: game,\n      getPositionObject: setGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChessBoard, \"TZV8XGrHOSbR4F4ZQPcsQl6yslw=\");\n\n_c = ChessBoard;\nexport default ChessBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","Chessboard","chessCoordsParser","ChessBoard","props","game","setGame"],"sources":["C:/Users/tomas/Desktop/chess-masterclass/backend/chess_masterclass/frontend_chessmasterclass/src/components/ChessBoard.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { Chessboard } from \"react-chessboard\";\r\nimport {chessCoordsParser} from '../utils/utlis'\r\n\r\n// https://www.npmjs.com/package/react-chessboard\r\n\r\nconst ChessBoard = (props) => {\r\n    \r\n  \r\n\r\n    // const [game, setGame] = useState('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR')\r\n    const [game, setGame] = useState(chessCoordsParser(props))\r\n    // lista game sie nadpisuje przy kazdym ruchu, trzeba by zrobic mozliwosc ustawiania figur dowolnie\r\n    // trzeba by wrzucic game do bazy danych (zrobic jakas podbaze z akapitami i tablicami szachowymi do Course)\r\n   \r\n\r\n  return (\r\n    <div>\r\n      <Chessboard id=\"BasicBoard\" arePiecesDraggable={false} boardWidth={400} \r\n                    position={game} \r\n                    getPositionObject={setGame}\r\n                    />\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default ChessBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,iBAAR,QAAgC,gBAAhC,C,CAEA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAI1B;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACE,iBAAiB,CAACE,KAAD,CAAlB,CAAhC,CAL0B,CAM1B;EACA;;EAGF,oBACE;IAAA,uBACE,QAAC,UAAD;MAAY,EAAE,EAAC,YAAf;MAA4B,kBAAkB,EAAE,KAAhD;MAAuD,UAAU,EAAE,GAAnE;MACc,QAAQ,EAAEC,IADxB;MAEc,iBAAiB,EAAEC;IAFjC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CApBD;;GAAMH,U;;KAAAA,U;AAsBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}